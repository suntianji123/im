// Code generated by ent, DO NOT EDIT.

package immsg

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the immsg type in the database.
	Label = "im_msg"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldSid holds the string denoting the sid field in the database.
	FieldSid = "sid"
	// FieldFromUID holds the string denoting the from_uid field in the database.
	FieldFromUID = "from_uid"
	// FieldFromAppid holds the string denoting the from_appid field in the database.
	FieldFromAppid = "from_appid"
	// FieldToUID holds the string denoting the to_uid field in the database.
	FieldToUID = "to_uid"
	// FieldToAppid holds the string denoting the to_appid field in the database.
	FieldToAppid = "to_appid"
	// FieldChannel holds the string denoting the channel field in the database.
	FieldChannel = "channel"
	// FieldMsgID holds the string denoting the msg_id field in the database.
	FieldMsgID = "msg_id"
	// FieldCts holds the string denoting the cts field in the database.
	FieldCts = "cts"
	// Table holds the table name of the immsg in the database.
	Table = "im_msg"
)

// Columns holds all SQL columns for immsg fields.
var Columns = []string{
	FieldID,
	FieldSid,
	FieldFromUID,
	FieldFromAppid,
	FieldToUID,
	FieldToAppid,
	FieldChannel,
	FieldMsgID,
	FieldCts,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the IMMsg queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// BySid orders the results by the sid field.
func BySid(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldSid, opts...).ToFunc()
}

// ByFromUID orders the results by the from_uid field.
func ByFromUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFromUID, opts...).ToFunc()
}

// ByFromAppid orders the results by the from_appid field.
func ByFromAppid(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldFromAppid, opts...).ToFunc()
}

// ByToUID orders the results by the to_uid field.
func ByToUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldToUID, opts...).ToFunc()
}

// ByToAppid orders the results by the to_appid field.
func ByToAppid(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldToAppid, opts...).ToFunc()
}

// ByChannel orders the results by the channel field.
func ByChannel(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldChannel, opts...).ToFunc()
}

// ByMsgID orders the results by the msg_id field.
func ByMsgID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldMsgID, opts...).ToFunc()
}

// ByCts orders the results by the cts field.
func ByCts(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCts, opts...).ToFunc()
}
