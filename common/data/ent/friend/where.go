// Code generated by ent, DO NOT EDIT.

package friend

import (
	"entgo.io/ent/dialect/sql"
	"github.com/im/common/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.Friend {
	return predicate.Friend(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.Friend {
	return predicate.Friend(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.Friend {
	return predicate.Friend(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.Friend {
	return predicate.Friend(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.Friend {
	return predicate.Friend(sql.FieldLTE(FieldID, id))
}

// UID applies equality check predicate on the "uid" field. It's identical to UIDEQ.
func UID(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldUID, v))
}

// PeerUID applies equality check predicate on the "peer_uid" field. It's identical to PeerUIDEQ.
func PeerUID(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldPeerUID, v))
}

// State applies equality check predicate on the "state" field. It's identical to StateEQ.
func State(v int) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldState, v))
}

// Cts applies equality check predicate on the "cts" field. It's identical to CtsEQ.
func Cts(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldCts, v))
}

// Uts applies equality check predicate on the "uts" field. It's identical to UtsEQ.
func Uts(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldUts, v))
}

// UIDEQ applies the EQ predicate on the "uid" field.
func UIDEQ(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldUID, v))
}

// UIDNEQ applies the NEQ predicate on the "uid" field.
func UIDNEQ(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldNEQ(FieldUID, v))
}

// UIDIn applies the In predicate on the "uid" field.
func UIDIn(vs ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldIn(FieldUID, vs...))
}

// UIDNotIn applies the NotIn predicate on the "uid" field.
func UIDNotIn(vs ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldNotIn(FieldUID, vs...))
}

// UIDGT applies the GT predicate on the "uid" field.
func UIDGT(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldGT(FieldUID, v))
}

// UIDGTE applies the GTE predicate on the "uid" field.
func UIDGTE(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldGTE(FieldUID, v))
}

// UIDLT applies the LT predicate on the "uid" field.
func UIDLT(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldLT(FieldUID, v))
}

// UIDLTE applies the LTE predicate on the "uid" field.
func UIDLTE(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldLTE(FieldUID, v))
}

// PeerUIDEQ applies the EQ predicate on the "peer_uid" field.
func PeerUIDEQ(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldPeerUID, v))
}

// PeerUIDNEQ applies the NEQ predicate on the "peer_uid" field.
func PeerUIDNEQ(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldNEQ(FieldPeerUID, v))
}

// PeerUIDIn applies the In predicate on the "peer_uid" field.
func PeerUIDIn(vs ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldIn(FieldPeerUID, vs...))
}

// PeerUIDNotIn applies the NotIn predicate on the "peer_uid" field.
func PeerUIDNotIn(vs ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldNotIn(FieldPeerUID, vs...))
}

// PeerUIDGT applies the GT predicate on the "peer_uid" field.
func PeerUIDGT(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldGT(FieldPeerUID, v))
}

// PeerUIDGTE applies the GTE predicate on the "peer_uid" field.
func PeerUIDGTE(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldGTE(FieldPeerUID, v))
}

// PeerUIDLT applies the LT predicate on the "peer_uid" field.
func PeerUIDLT(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldLT(FieldPeerUID, v))
}

// PeerUIDLTE applies the LTE predicate on the "peer_uid" field.
func PeerUIDLTE(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldLTE(FieldPeerUID, v))
}

// StateEQ applies the EQ predicate on the "state" field.
func StateEQ(v int) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldState, v))
}

// StateNEQ applies the NEQ predicate on the "state" field.
func StateNEQ(v int) predicate.Friend {
	return predicate.Friend(sql.FieldNEQ(FieldState, v))
}

// StateIn applies the In predicate on the "state" field.
func StateIn(vs ...int) predicate.Friend {
	return predicate.Friend(sql.FieldIn(FieldState, vs...))
}

// StateNotIn applies the NotIn predicate on the "state" field.
func StateNotIn(vs ...int) predicate.Friend {
	return predicate.Friend(sql.FieldNotIn(FieldState, vs...))
}

// StateGT applies the GT predicate on the "state" field.
func StateGT(v int) predicate.Friend {
	return predicate.Friend(sql.FieldGT(FieldState, v))
}

// StateGTE applies the GTE predicate on the "state" field.
func StateGTE(v int) predicate.Friend {
	return predicate.Friend(sql.FieldGTE(FieldState, v))
}

// StateLT applies the LT predicate on the "state" field.
func StateLT(v int) predicate.Friend {
	return predicate.Friend(sql.FieldLT(FieldState, v))
}

// StateLTE applies the LTE predicate on the "state" field.
func StateLTE(v int) predicate.Friend {
	return predicate.Friend(sql.FieldLTE(FieldState, v))
}

// CtsEQ applies the EQ predicate on the "cts" field.
func CtsEQ(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldCts, v))
}

// CtsNEQ applies the NEQ predicate on the "cts" field.
func CtsNEQ(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldNEQ(FieldCts, v))
}

// CtsIn applies the In predicate on the "cts" field.
func CtsIn(vs ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldIn(FieldCts, vs...))
}

// CtsNotIn applies the NotIn predicate on the "cts" field.
func CtsNotIn(vs ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldNotIn(FieldCts, vs...))
}

// CtsGT applies the GT predicate on the "cts" field.
func CtsGT(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldGT(FieldCts, v))
}

// CtsGTE applies the GTE predicate on the "cts" field.
func CtsGTE(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldGTE(FieldCts, v))
}

// CtsLT applies the LT predicate on the "cts" field.
func CtsLT(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldLT(FieldCts, v))
}

// CtsLTE applies the LTE predicate on the "cts" field.
func CtsLTE(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldLTE(FieldCts, v))
}

// UtsEQ applies the EQ predicate on the "uts" field.
func UtsEQ(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldEQ(FieldUts, v))
}

// UtsNEQ applies the NEQ predicate on the "uts" field.
func UtsNEQ(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldNEQ(FieldUts, v))
}

// UtsIn applies the In predicate on the "uts" field.
func UtsIn(vs ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldIn(FieldUts, vs...))
}

// UtsNotIn applies the NotIn predicate on the "uts" field.
func UtsNotIn(vs ...int64) predicate.Friend {
	return predicate.Friend(sql.FieldNotIn(FieldUts, vs...))
}

// UtsGT applies the GT predicate on the "uts" field.
func UtsGT(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldGT(FieldUts, v))
}

// UtsGTE applies the GTE predicate on the "uts" field.
func UtsGTE(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldGTE(FieldUts, v))
}

// UtsLT applies the LT predicate on the "uts" field.
func UtsLT(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldLT(FieldUts, v))
}

// UtsLTE applies the LTE predicate on the "uts" field.
func UtsLTE(v int64) predicate.Friend {
	return predicate.Friend(sql.FieldLTE(FieldUts, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.Friend) predicate.Friend {
	return predicate.Friend(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.Friend) predicate.Friend {
	return predicate.Friend(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.Friend) predicate.Friend {
	return predicate.Friend(sql.NotPredicates(p))
}
