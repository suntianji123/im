// Code generated by ent, DO NOT EDIT.

package friend

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the friend type in the database.
	Label = "friend"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUID holds the string denoting the uid field in the database.
	FieldUID = "uid"
	// FieldPeerUID holds the string denoting the peer_uid field in the database.
	FieldPeerUID = "peer_uid"
	// FieldState holds the string denoting the state field in the database.
	FieldState = "state"
	// FieldCts holds the string denoting the cts field in the database.
	FieldCts = "cts"
	// FieldUts holds the string denoting the uts field in the database.
	FieldUts = "uts"
	// Table holds the table name of the friend in the database.
	Table = "friend"
)

// Columns holds all SQL columns for friend fields.
var Columns = []string{
	FieldID,
	FieldUID,
	FieldPeerUID,
	FieldState,
	FieldCts,
	FieldUts,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Friend queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByUID orders the results by the uid field.
func ByUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUID, opts...).ToFunc()
}

// ByPeerUID orders the results by the peer_uid field.
func ByPeerUID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldPeerUID, opts...).ToFunc()
}

// ByState orders the results by the state field.
func ByState(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldState, opts...).ToFunc()
}

// ByCts orders the results by the cts field.
func ByCts(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldCts, opts...).ToFunc()
}

// ByUts orders the results by the uts field.
func ByUts(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldUts, opts...).ToFunc()
}
