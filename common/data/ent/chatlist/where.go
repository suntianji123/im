// Code generated by ent, DO NOT EDIT.

package chatlist

import (
	"entgo.io/ent/dialect/sql"
	"github.com/im/common/data/ent/predicate"
)

// ID filters vertices based on their ID field.
func ID(id int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldID, id))
}

// IDEQ applies the EQ predicate on the ID field.
func IDEQ(id int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldID, id))
}

// IDNEQ applies the NEQ predicate on the ID field.
func IDNEQ(id int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNEQ(FieldID, id))
}

// IDIn applies the In predicate on the ID field.
func IDIn(ids ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldIn(FieldID, ids...))
}

// IDNotIn applies the NotIn predicate on the ID field.
func IDNotIn(ids ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNotIn(FieldID, ids...))
}

// IDGT applies the GT predicate on the ID field.
func IDGT(id int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGT(FieldID, id))
}

// IDGTE applies the GTE predicate on the ID field.
func IDGTE(id int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGTE(FieldID, id))
}

// IDLT applies the LT predicate on the ID field.
func IDLT(id int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLT(FieldID, id))
}

// IDLTE applies the LTE predicate on the ID field.
func IDLTE(id int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLTE(FieldID, id))
}

// UID applies equality check predicate on the "uid" field. It's identical to UIDEQ.
func UID(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldUID, v))
}

// Channel applies equality check predicate on the "channel" field. It's identical to ChannelEQ.
func Channel(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldChannel, v))
}

// ChatID applies equality check predicate on the "chat_id" field. It's identical to ChatIDEQ.
func ChatID(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldChatID, v))
}

// MaxMsgID applies equality check predicate on the "max_msg_id" field. It's identical to MaxMsgIDEQ.
func MaxMsgID(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldMaxMsgID, v))
}

// Uts applies equality check predicate on the "uts" field. It's identical to UtsEQ.
func Uts(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldUts, v))
}

// Type applies equality check predicate on the "type" field. It's identical to TypeEQ.
func Type(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldType, v))
}

// UIDEQ applies the EQ predicate on the "uid" field.
func UIDEQ(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldUID, v))
}

// UIDNEQ applies the NEQ predicate on the "uid" field.
func UIDNEQ(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNEQ(FieldUID, v))
}

// UIDIn applies the In predicate on the "uid" field.
func UIDIn(vs ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldIn(FieldUID, vs...))
}

// UIDNotIn applies the NotIn predicate on the "uid" field.
func UIDNotIn(vs ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNotIn(FieldUID, vs...))
}

// UIDGT applies the GT predicate on the "uid" field.
func UIDGT(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGT(FieldUID, v))
}

// UIDGTE applies the GTE predicate on the "uid" field.
func UIDGTE(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGTE(FieldUID, v))
}

// UIDLT applies the LT predicate on the "uid" field.
func UIDLT(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLT(FieldUID, v))
}

// UIDLTE applies the LTE predicate on the "uid" field.
func UIDLTE(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLTE(FieldUID, v))
}

// ChannelEQ applies the EQ predicate on the "channel" field.
func ChannelEQ(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldChannel, v))
}

// ChannelNEQ applies the NEQ predicate on the "channel" field.
func ChannelNEQ(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldNEQ(FieldChannel, v))
}

// ChannelIn applies the In predicate on the "channel" field.
func ChannelIn(vs ...int) predicate.ChatList {
	return predicate.ChatList(sql.FieldIn(FieldChannel, vs...))
}

// ChannelNotIn applies the NotIn predicate on the "channel" field.
func ChannelNotIn(vs ...int) predicate.ChatList {
	return predicate.ChatList(sql.FieldNotIn(FieldChannel, vs...))
}

// ChannelGT applies the GT predicate on the "channel" field.
func ChannelGT(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldGT(FieldChannel, v))
}

// ChannelGTE applies the GTE predicate on the "channel" field.
func ChannelGTE(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldGTE(FieldChannel, v))
}

// ChannelLT applies the LT predicate on the "channel" field.
func ChannelLT(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldLT(FieldChannel, v))
}

// ChannelLTE applies the LTE predicate on the "channel" field.
func ChannelLTE(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldLTE(FieldChannel, v))
}

// ChatIDEQ applies the EQ predicate on the "chat_id" field.
func ChatIDEQ(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldChatID, v))
}

// ChatIDNEQ applies the NEQ predicate on the "chat_id" field.
func ChatIDNEQ(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNEQ(FieldChatID, v))
}

// ChatIDIn applies the In predicate on the "chat_id" field.
func ChatIDIn(vs ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldIn(FieldChatID, vs...))
}

// ChatIDNotIn applies the NotIn predicate on the "chat_id" field.
func ChatIDNotIn(vs ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNotIn(FieldChatID, vs...))
}

// ChatIDGT applies the GT predicate on the "chat_id" field.
func ChatIDGT(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGT(FieldChatID, v))
}

// ChatIDGTE applies the GTE predicate on the "chat_id" field.
func ChatIDGTE(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGTE(FieldChatID, v))
}

// ChatIDLT applies the LT predicate on the "chat_id" field.
func ChatIDLT(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLT(FieldChatID, v))
}

// ChatIDLTE applies the LTE predicate on the "chat_id" field.
func ChatIDLTE(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLTE(FieldChatID, v))
}

// MaxMsgIDEQ applies the EQ predicate on the "max_msg_id" field.
func MaxMsgIDEQ(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldMaxMsgID, v))
}

// MaxMsgIDNEQ applies the NEQ predicate on the "max_msg_id" field.
func MaxMsgIDNEQ(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNEQ(FieldMaxMsgID, v))
}

// MaxMsgIDIn applies the In predicate on the "max_msg_id" field.
func MaxMsgIDIn(vs ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldIn(FieldMaxMsgID, vs...))
}

// MaxMsgIDNotIn applies the NotIn predicate on the "max_msg_id" field.
func MaxMsgIDNotIn(vs ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNotIn(FieldMaxMsgID, vs...))
}

// MaxMsgIDGT applies the GT predicate on the "max_msg_id" field.
func MaxMsgIDGT(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGT(FieldMaxMsgID, v))
}

// MaxMsgIDGTE applies the GTE predicate on the "max_msg_id" field.
func MaxMsgIDGTE(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGTE(FieldMaxMsgID, v))
}

// MaxMsgIDLT applies the LT predicate on the "max_msg_id" field.
func MaxMsgIDLT(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLT(FieldMaxMsgID, v))
}

// MaxMsgIDLTE applies the LTE predicate on the "max_msg_id" field.
func MaxMsgIDLTE(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLTE(FieldMaxMsgID, v))
}

// UtsEQ applies the EQ predicate on the "uts" field.
func UtsEQ(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldUts, v))
}

// UtsNEQ applies the NEQ predicate on the "uts" field.
func UtsNEQ(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNEQ(FieldUts, v))
}

// UtsIn applies the In predicate on the "uts" field.
func UtsIn(vs ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldIn(FieldUts, vs...))
}

// UtsNotIn applies the NotIn predicate on the "uts" field.
func UtsNotIn(vs ...int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldNotIn(FieldUts, vs...))
}

// UtsGT applies the GT predicate on the "uts" field.
func UtsGT(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGT(FieldUts, v))
}

// UtsGTE applies the GTE predicate on the "uts" field.
func UtsGTE(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldGTE(FieldUts, v))
}

// UtsLT applies the LT predicate on the "uts" field.
func UtsLT(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLT(FieldUts, v))
}

// UtsLTE applies the LTE predicate on the "uts" field.
func UtsLTE(v int64) predicate.ChatList {
	return predicate.ChatList(sql.FieldLTE(FieldUts, v))
}

// TypeEQ applies the EQ predicate on the "type" field.
func TypeEQ(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldEQ(FieldType, v))
}

// TypeNEQ applies the NEQ predicate on the "type" field.
func TypeNEQ(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldNEQ(FieldType, v))
}

// TypeIn applies the In predicate on the "type" field.
func TypeIn(vs ...int) predicate.ChatList {
	return predicate.ChatList(sql.FieldIn(FieldType, vs...))
}

// TypeNotIn applies the NotIn predicate on the "type" field.
func TypeNotIn(vs ...int) predicate.ChatList {
	return predicate.ChatList(sql.FieldNotIn(FieldType, vs...))
}

// TypeGT applies the GT predicate on the "type" field.
func TypeGT(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldGT(FieldType, v))
}

// TypeGTE applies the GTE predicate on the "type" field.
func TypeGTE(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldGTE(FieldType, v))
}

// TypeLT applies the LT predicate on the "type" field.
func TypeLT(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldLT(FieldType, v))
}

// TypeLTE applies the LTE predicate on the "type" field.
func TypeLTE(v int) predicate.ChatList {
	return predicate.ChatList(sql.FieldLTE(FieldType, v))
}

// And groups predicates with the AND operator between them.
func And(predicates ...predicate.ChatList) predicate.ChatList {
	return predicate.ChatList(sql.AndPredicates(predicates...))
}

// Or groups predicates with the OR operator between them.
func Or(predicates ...predicate.ChatList) predicate.ChatList {
	return predicate.ChatList(sql.OrPredicates(predicates...))
}

// Not applies the not operator on the given predicate.
func Not(p predicate.ChatList) predicate.ChatList {
	return predicate.ChatList(sql.NotPredicates(p))
}
